buildscript {
        repositories {
                mavenCentral()
                }
        dependencies {
		classpath ("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
		classpath ("io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE")
		classpath ("org.springframework.cloud:spring-cloud-netflix:1.3.1.RELEASE")
		classpath("se.transmode.gradle:gradle-docker:1.2")
        }
}

apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

jar {
    baseName = 'microservice-circuit-breaker'
    version = '1.0'
}

repositories {
        mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR5'
    }
}

dependencies {
    compile ("org.springframework.boot:spring-boot-starter-web:1.3.5.RELEASE")
    compile("org.springframework.cloud:spring-cloud-starter-hystrix")
    compile ("org.springframework.cloud:spring-cloud-starter-eureka-server")
    compile ("org.springframework.cloud:spring-cloud-starter")
    compile ("org.springframework.boot:spring-boot-starter-actuator")
    compile ("ch.qos.logback:logback-classic:1.1.6")
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    //tag = jar.baseName
    applicationName = jar.baseName
    tagVersion = jar.version
    addFile("build/libs/${jar.baseName}-${jar.version}.jar", "app.jar")
    dockerfile = file('src/main/docker/Dockerfile')
    
   doLast{
        exec {
            executable "sh"
            args "-c","docker save -o ./build/libs/${jar.baseName}-docker.tar 'microservices/${jar.baseName}'"
        }
    }
}